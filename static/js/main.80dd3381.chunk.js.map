{"version":3,"sources":["assets/noPosterSmall.png","Components/GlobalStyles.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/TV/TVPresenter.js","Routes/TV/TVContainer.js","Routes/TV/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Header.js","Components/Router.js","Components/App.js","index.js"],"names":["globalStyles","createGlobalStyle","reset","Container","styled","div","Title","span","Grid","Section","title","children","role","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Helmet","Loader","map","movie","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","tvApi","state","a","data","results","this","setState","React","Component","HomeContainer","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","event","preventDefault","searchByTerm","target","SearchContainer","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","DetailContainer","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.80dd3381.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.b6fb74ae.png\";","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:--apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:14px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top: 50px;\r\n    }\r\n\r\n`;\r\n\r\n\r\nexport default globalStyles;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      🎃\r\n    </span>\r\n  </Container>\r\n);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming Movies\">\r\n            {upcoming.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Movies\">\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key:\"29fc14ecefcf1f4302c53e7f55637bf7\",\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: id => api.get(`movie/${id}`, {\r\n        params:{\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query:term\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () =>api.get(\"tv/top_rated\"),\r\n    popular: () =>api.get(\"tv/popular\"),\r\n    airingToday: () =>api.get(\"tv/airing_today\"),\r\n    showDetail: id => api.get(`tv/${id}`, {\r\n        params:{\r\n            append_to_response: \"videos\"\r\n        }\r\n    }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query:term\r\n        }\r\n    })\r\n};","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming }\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV Shows | Nomflix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Airing Today\">\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n      topRated: null,\r\n      popular: null,\r\n      airingToday: null,\r\n      loading: true,\r\n      error: null\r\n    };\r\n  \r\n    async componentDidMount() {\r\n      try {\r\n        const {\r\n          data: { results: topRated }\r\n        } = await tvApi.topRated();\r\n        const {\r\n          data: { results: popular }\r\n        } = await tvApi.popular();\r\n        const {\r\n          data: { results: airingToday }\r\n        } = await tvApi.airingToday();\r\n        this.setState({ topRated, popular, airingToday });\r\n      } catch {\r\n        this.setState({\r\n          error: \"Can't find TV information.\"\r\n        });\r\n      } finally {\r\n        this.setState({ loading: false });\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      const { topRated, popular, airingToday, loading, error } = this.state;\r\n      return (\r\n        <TVPresenter\r\n          topRated={topRated}\r\n          popular={popular}\r\n          airingToday={airingToday}\r\n          loading={loading}\r\n          error={error}\r\n        />\r\n      );\r\n    }\r\n  }","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  searchTerm,\r\n  handleSubmit,\r\n  error,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | Nomflix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                imageUrl={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n                isMovie={true}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                imageUrl={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"../../Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, loading, error }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | Nomflix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname }\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\")\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport { Link,withRouter } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color:rgba(20, 20, 20, 0.8);\r\n    z-index: 10;\r\n    box-shadow:0px 1px 5px 2px rgba(0,0,0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:50px;\r\n    height:50px;\r\n    text-align: center;\r\n    border-bottom: 3px solid\r\n    ${props => props.current? \"#ecf0f1\": \"transparent\"};\r\n    transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height: 50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content: center;\r\n`;\r\n\r\nexport default withRouter (({ location: { pathname }}) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname ===\"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname ===\"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname ===\"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));\r\n\r\n","import React from \"react\";\r\nimport {\r\n  HashRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"../Routes/Home/index\";\r\nimport TV from \"../Routes/TV/index\";\r\nimport Search from \"../Routes/Search/index\";\r\nimport Detail from \"../Routes/Detail/index\";\r\nimport Header from \"./Header\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport GlobalStyles from \"./GlobalStyles\";\r\nimport Router from \"./Router\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Router />\r\n        <GlobalStyles />\r\n      </>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/App';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}